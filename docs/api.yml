openapi: 3.0.0
info:
    title: Notebooks Api
    description: Api for adding notebooks and saving notes, getting questions asked directly into your notebook.
    version: 1.0.0
servers:
    - url: 'http://localhost:8090'
paths:
    /auth/register:
        post:
            summary: Register as a new user
            description: You just need to provide your email and password
            operationId: registerUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/register'
                required: true
            responses:
                '200':
                    description: successful registration
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/register'
                '400':
                    description: 'Invalid data'
    /auth/login:
        post:
            summary: Login for existing users
            description: You just need to provide your email and password
            operationId: loginUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/login'
                required: true
            responses:
                '200':
                    description: successful login
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/login'
                '400':
                    description: 'Invalid data'
    /notebooks:
        post:
            summary: Create a new notebook
            description: This will enable you to create new notebooks, where you can add questions and save notes.
            operationId: createNotebook
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/notebook'
                required: true
            responses:
                '200':
                    description: successfully created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/notebook'
                '400':
                    description: 'Invalid data'
    /notebooks/{id}:
        get:
            summary: Get a notebook by id
            operationId: getNotebook
            responses:
                '204':
                    description: Successfully return a notebook
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/notebook'
                '404':
                    description: Not found

components:
    schemas:
        register:
            type: object
            properties:
                email:
                    type: string
                    format: email
                    example: somename@example.com
                password:
                    type: string
                    format: password
                    example: ';!@$RF#%asd12'
        login:
            type: object
            properties:
                email:
                    type: string
                    format: email
                    example: somename@example.com
                password:
                    type: string
                    format: password
                    example: ';!@$RF#%asd12'
        notebook:
            type: object
            properties:
                title:
                    type: string
                    example: "Notebook about Brain chemistry"
                description:
                    type: string
                    example: "Everything that I am learning about the brain chemistry I will note them here"

